javascript:((e,t)=>{"use strict";const n="NgSlackLinkifier",s="0.1.4",r="nsl-github-commit",o="nsl-github-issue",i="nsl-jira",a="nsl-processed",l="nsl-post-processed",c="%",h=new Error("Cleaning up.");class p{static get TOKEN_NAME(){return this._notImplemented()}static get TOKEN_DESCRIPTION_HTML(){return this._notImplemented()}static validateToken(e){if(!e||"string"!=typeof e)throw new Error(`Empty or invalid token (${typeof e}: ${e}). Please, provide an non-empty string.`)}constructor(){this._cacheMaxAge=6e4,this._cache=new Map,this._headers=null}cleanUp(){this.setToken(null),this._cache.clear()}requiresToken(){this._notImplemented()}setToken(e){this._headers=e?this._generateHeaders(e):void 0}_generateHeaders(e){this._notImplemented(e)}_getErrorForResponse(e){this._notImplemented(e)}_getFromCache(e){if(!this._cache.has(e))return;const{date:t,response:n}=this._cache.get(e);if(!(Date.now()-t>this._cacheMaxAge))return n;this._cache.delete(e)}_getJson(t){let n=this._getFromCache(t);return n||(n=e.fetch(t,{headers:this._headers}).then(async e=>e.ok?e.json():Promise.reject(await this._getErrorForResponse(e))).catch(e=>{throw this._getFromCache(t)===n&&this._cache.delete(t),e}),this._cache.set(t,{date:Date.now(),response:n})),n}_notImplemented(){throw new Error("Not implemented.")}}class d{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}class u extends p{static get TOKEN_NAME(){return"GitHub access token"}static get TOKEN_DESCRIPTION_HTML(){const e=this.TOKEN_NAME,t="https://github.com/settings/tokens";return`\n        <p>\n          A ${e} can be used to make authenticated requests to GitHub's API, when retrieving info for links to\n          issues and PRs. Authenticated requests have a much higher limit for requests per hour (at the time of writing\n          5000 vs 60 for anonymous requests).\n        </p>\n        <p>\n          To create a ${e} visit: <a href="${t}" target="_blank">${t}</a>\n          <i>(no scopes required)</i>\n        </p>\n        <p>Providing a ${e} is <b>optional</b>.</p>\n      `}constructor(){super(),this._baseUrl="https://api.github.com/repos",this._rateLimitResetTime=0}getCommitInfo(e,t,n){const s=`${this._baseUrl}/${e}/${t}/commits/${n}`;return this._getJson(s).then(e=>({sha:e.sha,message:e.commit.message,author:this._extractUserInfo(e.author),committer:this._extractUserInfo(e.committer),authorDate:new Date(e.commit.author.date),committerDate:new Date(e.commit.committer.date),stats:e.stats,files:e.files.map(e=>this._extractFileInfo(e))})).catch(s=>{throw new Error(`Error getting GitHub info for ${e}/${t}@${n}:\n${s.message||s}`)})}getIssueInfo(e,t,n){const s=`${this._baseUrl}/${e}/${t}/issues/${n}`;return this._getJson(s).then(e=>({number:e.number,title:e.title,description:e.body.trim(),author:this._extractUserInfo(e.user),state:e.state,labels:e.labels.map(e=>e.name),isPr:e.html_url.endsWith(`/pull/${e.number}`)})).catch(s=>{throw new Error(`Error getting GitHub info for ${e}/${t}#${n}:\n${s.message||s}`)})}requiresToken(){return this._rateLimitResetTime>Date.now()&&`Anonymous rate-limit reached (until ${new Date(this._rateLimitResetTime).toLocaleString()})`}_extractFileInfo(e){return{filename:e.filename,patch:e.patch,status:e.status,stats:{total:e.changes,additions:e.additions,deletions:e.deletions}}}_extractUserInfo(e){return{avatar:e.avatar_url,username:e.login,url:e.html_url}}_generateHeaders(e){return{Authorization:`token ${e}`}}async _getErrorForResponse(e){const t=e.headers;let n=await e.json();if(n.message||(n={message:JSON.stringify(n)}),403===e.status&&"0"==t.get("X-RateLimit-Remaining")){const e=t.get("X-RateLimit-Limit"),s=new Date(1e3*t.get("X-RateLimit-Reset"));this._rateLimitResetTime=s.getTime(),n.message=`0/${e} API requests remaining until ${s.toLocaleString()}.\n${n.message}`}return new Error(`${e.status} (${e.statusText}) - ${n.message}`)}}class g{get length(){return this._keys().length}constructor(){this._resetItems()}clear(){this._resetItems()}getItem(e){return this._has(e)?this._items[e]:null}key(e){const t=this._keys();return e<t.length?t[e]:null}removeItem(e){delete this._items[e]}setItem(e,t){this._items[e]=`${t}`}_has(e){return Object.prototype.hasOwnProperty.call(this._items,e)}_keys(){return Object.keys(this._items)}_resetItems(){this._items=Object.create(null)}}class m extends p{static get TOKEN_NAME(){return"Jira e-mail and access token"}static get TOKEN_DESCRIPTION_HTML(){const e=this.TOKEN_NAME,t="https://id.atlassian.com/manage/api-tokens";return`\n        <p>\n          A ${e} is required in order to retrieve info for links to Jira issues. Unauthenticated requests are\n          <b>not supported</b> by Jira's API, so you will not be able to see any info without providing a ${e}.\n        </p>\n        <p>To create a Jira access token visit: <a href="${t}" target="_blank">${t}</a></p>\n        <p>Providing a ${e} is <b>optional</b> (unless you want to see issue info in here).</p>\n        <br />\n        <p>\n          <b>IMPORTANT:</b><br />\n          Enter the ${e} in the field below in the format <code>&lt;email&gt;:&lt;access-token&gt;</code> (e.g.\n          <code>myself@mail.me:My4cc3ssT0k3n</code>).\n        </p>\n      `}static validateToken(e){if(super.validateToken(e),!/^[^:]+@[^:]+:./.test(e)){const t=e.replace(/\w/g,"*");throw new Error(`Invalid token format (${t}). `+"Please, provide the token in the form `<email>:<access-token>` (e.g. `myself@mail.me:My4cc3ssT0k3n`).")}}constructor(){super(),this._baseUrl="https://angular-team.atlassian.net/rest/api/3";this._baseUrl=`https://cors-anywhere.herokuapp.com/${this._baseUrl}`,e.alert(`\n        [${this.constructor.name}]\n\nUsing https://cors-anywhere.herokuapp.com during development.\nDisable for production.`)}getIssueInfo(e){const t=`${this._baseUrl}/issue/${e}`;return this._getJson(t).then(e=>({...e})).catch(t=>{throw new Error(`Error getting Jira info for ${e}:\n${t.message||t}`)})}requiresToken(){return!this._headers&&"Unauthenticated requests are not supported."}_generateHeaders(t){return{Authorization:`Basic ${e.btoa(t)}`}}async _getErrorForResponse(e){let t=await e.json();return t.message||(t={message:JSON.stringify(t)}),new Error(`${e.status} (${e.statusText}) - ${t.message}`)}}class _{constructor(e=(()=>void 0)){this._postProcessNode=e,this._observer=new MutationObserver(e=>e.forEach(e=>e.addedNodes&&setTimeout(()=>this.processAll(e.addedNodes),500)))}cleanUp(){this._observer.disconnect()}observe(e){this._observer.observe(e,{childList:!0,subtree:!0})}processAll(e,t=!1){const n=".c-message__body, .c-message_attachment__body, .c-message_kit__text",s=new Set;e.forEach(e=>{if(s.has(e.parentNode))return;(e.closest?e.closest(n):e.parentNode&&e.parentNode.closest(n))?this._processNode(e.parentNode,t):e.querySelectorAll&&e.querySelectorAll(n).forEach(e=>this._processNode(e,t))})}_acceptNodeInTextNodeWalker(e){return!e.parentNode||"A"===e.parentNode.nodeName||e.parentNode.parentNode&&"A"===e.parentNode.parentNode.nodeName?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}_processNode(e,t){const n=new Set([...this._processNodeMdLinks(e),...this._processNodeGithubCommits(e),...this._processNodeGithubIssues(e),...this._processNodeJira(e)]);n.forEach(e=>e.classList.add(a)),(t||n.size)&&this._postProcessNode(e)}_processNodeGithubCommits(e){const n=new Set,s=t.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:e=>this._acceptNodeInTextNodeWalker(e)},!1);let o;for(;o=s.nextNode();){const e=/(?:([\w.-]+)\/)?([\w.-]+)@([A-Fa-f\d]{7,})\b/.exec(o.textContent);if(e){const[,s="angular",r="angular",i]=e,a=`https://github.com/${s}/${r}/commit/${i}`,l=Object.assign(t.createElement("a"),{href:a,target:"_blank",textContent:a}),c=t.createTextNode(o.textContent.slice(e.index+e[0].length));o.textContent=o.textContent.slice(0,e.index),o.after(l),l.after(c),n.add(l)}}return e.querySelectorAll(`a:not(.${a})`).forEach(e=>{const t=/^https:\/\/github\.com\/([\w.-]+)\/([\w.-]+)\/commit\/([A-Fa-f\d]{7,})$/,s=t.exec(e.href)||new RegExp(`^https://slack-redir\\.net/link\\?url=https${c}3A${c}2F${c}2Fgithub\\.com${c}2F([\\w.-]+)${c}2F([\\w.-]+)${c}2Fcommit${c}2F([A-Fa-f\\d]{7,})$`).exec(e.href);if(s){const[,t,o,i]=s;e.classList.add(r),e.dataset.nslOwner=t,e.dataset.nslRepo=o,e.dataset.nslCommit=i,n.add(e)}const o=t.exec(e.innerHTML);if(o){const[,t,s,r]=o,i=`${"angular"===t?"":`${t}/`}${s}`;e.innerHTML=`<b>${i}@${r.slice(0,7)}</b>`,n.add(e)}}),n}_processNodeGithubIssues(e){const n=new Set,s=t.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:e=>this._acceptNodeInTextNodeWalker(e)},!1);let r;for(;r=s.nextNode();){const e=/(?:(?:([\w.-]+)\/)?([\w.-]+))?#(\d+)\b/.exec(r.textContent);if(e){const[,s="angular",o="angular",i]=e,a=`https://github.com/${s}/${o}/issues/${i}`,l=Object.assign(t.createElement("a"),{href:a,target:"_blank",textContent:a}),c=t.createTextNode(r.textContent.slice(e.index+e[0].length));r.textContent=r.textContent.slice(0,e.index),r.after(l),l.after(c),n.add(l)}}return e.querySelectorAll(`a:not(.${a})`).forEach(e=>{const t=/^https:\/\/github\.com\/([\w.-]+)\/([\w.-]+)\/(?:issues|pull)\/(\d+)$/,s=t.exec(e.href)||new RegExp(`^https://slack-redir\\.net/link\\?url=https${c}3A${c}2F${c}2Fgithub\\.com${c}2F([\\w.-]+)${c}2F([\\w.-]+)${c}2F(?:issues|pull)${c}2F(\\d+)$`).exec(e.href);if(s){const[,t,r,i]=s;e.classList.add(o),e.dataset.nslOwner=t,e.dataset.nslRepo=r,e.dataset.nslNumber=i,n.add(e)}const r=t.exec(e.innerHTML);if(r){const[,t,s,o]=r,i="angular"===t,a="angular"===s,l=`${i?"":`${t}/`}${i&&a?"":s}`;e.innerHTML=`<b>${l}#${o}</b>`,n.add(e)}}),n}_processNodeJira(e){const n=new Set,s=t.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:e=>this._acceptNodeInTextNodeWalker(e)},!1);let r;for(;r=s.nextNode();){const e=/(?<!https:\/\/angular-team\.atlassian\.net\/browse\/)\b([A-Z]+-\d+)\b/.exec(r.textContent);if(e){const s=`https://angular-team.atlassian.net/browse/${e[1]}`,o=Object.assign(t.createElement("a"),{href:s,target:"_blank",textContent:s}),i=t.createTextNode(r.textContent.slice(e.index+e[0].length));r.textContent=r.textContent.slice(0,e.index),r.after(o),o.after(i),n.add(o)}}return e.querySelectorAll(`a:not(.${a})`).forEach(e=>{const t=/^https:\/\/angular-team\.atlassian\.net\/browse\/([A-Z]+-\d+)$/,s=t.exec(e.href)||new RegExp(`^https://slack-redir\\.net/link\\?url=https${c}3A${c}2F${c}2Fangular-team\\.atlassian\\.net${c}2Fbrowse${c}2F([A-Z]+-\\d+)$`).exec(e.href);s&&(e.classList.add(i),e.dataset.nslNumber=s[1],n.add(e));const r=t.exec(e.innerHTML);r&&(e.innerHTML=`<b>${r[1]}</b>`,n.add(e))}),n}_processNodeMdLinks(e){const t=new Set;return e.querySelectorAll(`a:not(.${a})`).forEach(e=>{const n=e.previousSibling,s=n&&n.nodeType===Node.TEXT_NODE&&/\[([^\]]+)]\(/.exec(n.textContent),r=s&&e.nextSibling,o=r&&r.nodeType===Node.TEXT_NODE&&/\)/.exec(r.textContent);o&&(n.textContent=n.textContent.slice(0,-s[0].length),r.textContent=r.textContent.slice(o[0].length),e.innerHTML=`<b>${s[1]}</b>`,t.add(e))}),t}}class b{constructor(e){this._prefix=`[${e}]`}cleanUp(){}log(...e){console.log(this._prefix,...e)}warn(...e){console.warn(this._prefix,...e)}error(...e){console.error(this._prefix,...e)}}class f{constructor(){this._crypto=e.crypto.subtle,this._version="1",this._decoder=new TextDecoder,this._encoder=new TextEncoder,this._algorithm={name:"AES-CBC",iv:this._encoder.encode("SupposedlyRandom")},this._superSecretKey=null,this._ready=this._init()}cleanUp(){}async decrypt(e){await this._ready;const[t,n,...s]=e.split(":"),r=n&&n.split(",").filter(Boolean).map(Number);if(s.length||!r||!r.length||r.some(Number.isNaN))throw new Error(`Unable to decrypt \`${e}\`: Invalid or unknown format.`);if(t!==this._version)throw new Error(`Unable to decrypt \`${e}\`: Version mismatch (expected: ${this._version}).`);const o=await this._crypto.decrypt(this._algorithm,this._superSecretKey,Uint16Array.from(r));return this._decoder.decode(o)}async encrypt(e){await this._ready;const t=await this._crypto.encrypt(this._algorithm,this._superSecretKey,this._encoder.encode(e));return`${this._version}:${new Uint16Array(t).join(",")}`}async _init(){this._superSecretKey=await this._crypto.importKey("raw",this._encoder.encode("$NgSl@ckL1nk1fy$"),this._algorithm,!1,["decrypt","encrypt"])}}class y{constructor(e,t){this._prefix=`${e}:`,this._store=t}clear(){this.keys().forEach(e=>this.delete(e))}delete(e){this._store.removeItem(this._keyFor(e))}get(e){const t=this._store.getItem(this._keyFor(e));return null===t?void 0:JSON.parse(t)}has(e){return null!==this._store.getItem(this._keyFor(e))}keys(){return Array.from(new Array(this._store.length),(e,t)=>this._store.key(t)).filter(e=>e.startsWith(this._prefix))}set(e,t){void 0!==t&&this._store.setItem(this._keyFor(e),JSON.stringify(t))}_keyFor(e){return`${this._prefix}${e}`}}class x{constructor(t){this.local=new y(t,e.localStorage),this.session=new y(t,e.sessionStorage),this.inMemory=new y(t,new g)}cleanUp(){this.inMemory.clear()}}class w{constructor(){this._openDialogDeferreds=[],this._popup=null,this._hidePopupTimeout=null,this._showPopupTimeout=null,this._snackbarContainer=this._createSnackbarContainer(),this._scratchpad=t.createElement("div");const e=this;this._DialogDeferred=class extends d{constructor(t){e._openDialogDeferreds.push(super()),this.promise=this.promise.finally(()=>{e._fadeOut(t);const n=e._openDialogDeferreds.indexOf(t);-1!==n&&e._openDialogDeferreds.splice(n,1)})}}}cleanUp(){for(;this._openDialogDeferreds.length;)this._openDialogDeferreds.pop().reject(h);this.hidePopup(),this._snackbarContainer.remove()}escapeHtml(e){this._scratchpad.textContent=e;const t=this._scratchpad.innerHTML;return this._scratchpad.textContent="",t}hidePopup(){this._cancelHidePopup(),this._popup&&(this._fadeOut(this._popup),this._popup=null)}scheduleHidePopup(e){return!this._hidePopupTimeout&&(this._cancelShowPopup(),!!this._popup&&(this._hidePopupTimeout=setTimeout(()=>this.hidePopup(),e),!0))}scheduleShowPopup(e,t,n){return this._cancelHidePopup(),this._cancelShowPopup(),this._showPopupTimeout=setTimeout(()=>this.showPopup(e,t),n),!0}showDialog(r,o,i){const a=Object.assign(t.createElement("div"),{className:"nsl-dialog-backdrop",innerHTML:`\n          <div class="nsl-dialog">\n            <header class="nsl-dialog-header">${n} v${s}</header>\n            <section class="nsl-dialog-content"></section>\n            <footer class="nsl-dialog-actions">\n              <button class="nsl-dialog-btn-ok">${o}</button>\n              <button class="nsl-dialog-btn-cancel">${i}</button>\n            </footer>\n          </div>\n        `,style:"\n          align-items: center;\n          background-color: rgba(0, 0, 0, 0.5);\n          bottom: 0;\n          display: flex;\n          justify-content: center;\n          padding: 15px;\n          position: fixed;\n          left: 0;\n          right: 0;\n          top: 0;\n          z-index: 10200;\n        "});Object.assign(a.querySelector(".nsl-dialog"),{style:`\n          background-color: white;\n          border: 1px solid lightgray;\n          border-radius: 6px;\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, .08), 0 4px 12px 0 rgba(0, 0, 0, .12);\n          box-sizing: border-box;\n          display: flex;\n          flex-direction: column;\n          max-height: ${Math.min(e.innerHeight-30,700)}px;\n          max-width: ${Math.min(e.innerWidth-30,900)}px;\n          min-height: ${Math.min(e.innerHeight-30,500)}px;\n          min-width: ${Math.min(e.innerWidth-30,750)}px;\n          overflow: auto;\n          padding: 15px;\n          pointer-events: all;\n        `}),Object.assign(a.querySelector(".nsl-dialog-header"),{style:"\n          color: gray;\n          font-size: 0.75em;\n          text-align: right;\n        "}),this._insertContent(Object.assign(a.querySelector(".nsl-dialog-content"),{style:"\n            user-select: text;\n          "}),r),Object.assign(a.querySelector(".nsl-dialog-actions"),{style:"\n          display: flex;\n          justify-content: flex-end;\n          user-select: text;\n        "}),Object.assign(a.querySelector(".nsl-dialog-btn-ok"),{onclick:()=>l.resolve(!0),onmouseenter:e=>e.target.style.borderColor="orange",onmouseleave:e=>e.target.style.borderColor="white",style:"\n          background-color: green;\n          border: 2px solid white;\n          border-radius: 6px;\n          color: white;\n          margin-right: 15px;\n          padding: 10px 15px;\n        "}),Object.assign(a.querySelector(".nsl-dialog-btn-cancel"),{onclick:()=>l.resolve(!1),onmouseenter:e=>e.target.style.borderColor="orange",onmouseleave:e=>e.target.style.borderColor="white",style:"\n          background-color: gray;\n          border: 2px solid white;\n          border-radius: 6px;\n          color: white;\n          padding: 10px 15px;\n        "});const l=new this._DialogDeferred(a);return t.body.appendChild(a),this._fadeIn(a),l.promise}showPopup(e,n){this._cancelShowPopup(),this.hidePopup();const s=this._calculatePopupPositioning(n);this._popup=Object.assign(t.createElement("div"),{className:"nsl-popup",onmouseenter:()=>this._cancelHidePopup(),onmouseleave:()=>this.hidePopup(),style:`\n          background-color: white;\n          border: 1px solid gray;\n          border-radius: 6px;\n          bottom: ${s.bottom};\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, .08), 0 4px 12px 0 rgba(0, 0, 0, .12);\n          left: ${s.left};\n          max-height: ${s.maxHeight};\n          overflow: auto;\n          padding: 10px;\n          position: fixed;\n          right: ${s.right};\n          top: ${s.top};\n          user-select: text;\n          z-index: 10100;\n        `}),this._insertContent(this._popup,e),t.body.appendChild(this._popup),this._fadeIn(this._popup)}showSnackbar(e,n=2e3){const s=Object.assign(t.createElement("div"),{className:"nsl-snackbar",innerHTML:'\n          <section class="nsl-snackbar-content"></section>\n          <button class="nsl-snackbar-btn-close">&#x2715;</button>\n        ',style:"\n          background-color: white;\n          border: 1px solid lightgray;\n          border-radius: 6px;\n          box-shadow: 0 0 0 1px rgba(0, 0, 0, .08), 0 4px 12px 0 rgba(0, 0, 0, .12);\n          box-sizing: border-box;\n          display: flex;\n          margin-top: 5px;\n          max-height: 500px;\n          max-width: 750px;\n          min-width: 400px;\n          pointer-events: all;\n        "});this._insertContent(Object.assign(s.querySelector(".nsl-snackbar-content"),{style:"\n            overflow: auto;\n            padding: 10px 5px 10px 10px;\n            user-select: text;\n          "}),e),Object.assign(s.querySelector(".nsl-snackbar-btn-close"),{onclick:()=>this._fadeOut(s),onmouseenter:e=>e.target.style.color="red",onmouseleave:e=>e.target.style.color="lightgray",style:"\n          align-self: flex-start;\n          background-color: transparent;\n          border: none;\n          color: lightgray;\n          cursor: pointer;\n          margin-top: -5px;\n          padding: 5px;\n        "}),this._snackbarContainer.appendChild(s);const r=this._fadeIn(s);return n<0?r:r.then(()=>new Promise(e=>setTimeout(e,n))).then(()=>this._fadeOut(s))}_animateProp(e,t,n,s,r=200){const o=e.style;return this._withRafInterval([()=>o.transition="",()=>o[t]=n,()=>o.transition=`${t} ${r}ms linear`,()=>o[t]=s]).then(()=>new Promise(e=>setTimeout(e,r)))}_calculatePopupPositioning(t){const n=t.target.getBoundingClientRect(),s=n.top,r=e.innerHeight-n.bottom,o=r<=500&&(s>500||s>r);return{maxHeight:`${Math.min(750,(o?s:r)-10)}px`,top:o?"auto":`${n.bottom}px`,bottom:o?`${e.innerHeight-n.top}px`:"auto",...(()=>{const t=(n.left+n.right)/2;let s=Math.max(10,t-450),r=Math.min(e.innerWidth-10,s+900);return r-s<900&&(s=Math.max(10,r-900)),{left:`${s}px`,right:`${e.innerWidth-r}px`}})()}}_cancelHidePopup(){this._hidePopupTimeout&&(clearTimeout(this._hidePopupTimeout),this._hidePopupTimeout=null)}_cancelShowPopup(){this._showPopupTimeout&&(clearTimeout(this._showPopupTimeout),this._showPopupTimeout=null)}_createSnackbarContainer(){const e=Object.assign(t.createElement("div"),{className:"nsl-snackbar-container",style:"\n          bottom: 10px;\n          display: flex;\n          flex-direction: column-reverse;\n          pointer-events: none;\n          position: fixed;\n          right: 10px;\n          z-index: 10300;\n        "});return t.body.appendChild(e),e}_fadeIn(e,t){return this._animateProp(e,"opacity",.1,1,t)}_fadeOut(e,t){return this._animateProp(e,"opacity",1,.1,t).then(()=>e.remove())}_insertContent(e,t){"string"==typeof t?e.innerHTML=t:(e.innerHTML="",e.appendChild(t))}_withRafInterval(t){return new Promise((n,s)=>{if(!t.length)return n();t.shift()(),e.requestAnimationFrame(()=>this._withRafInterval(t).then(n,s))})}}(new class{constructor(){this._KEYS=new Map([[u,1],[m,2]]),this._cleanUpables=[this._logUtils=new b(`${n} v${s}`),this._secretUtils=new f,this._storageUtils=new x(n),this._linkifier=new _(e=>this._addListeners(e)),this._uiUtils=new w,this._ghUtils=new u,this._jiraUtils=new m],this._cleanUpFns=[()=>this._destroyedDeferred.reject(h)],this._destroyedDeferred=new d}cleanUp(){for(this._logUtils.log("Uninstalling...");this._cleanUpables.length||this._cleanUpFns.length;){for(;this._cleanUpables.length;)this._cleanUpables.shift().cleanUp();for(;this._cleanUpFns.length;)this._cleanUpFns.shift()()}this._logUtils.log("Uninstalled.")}async main(){try{e.__ngSlackLinkifyCleanUp&&e.__ngSlackLinkifyCleanUp(),e.__ngSlackLinkifyCleanUp=(()=>{this.cleanUp(),e.__ngSlackLinkifyCleanUp=null}),this._logUtils.log("Installing..."),this._ghUtils.setToken(await this._getStoredTokenFor(u)),this._jiraUtils.setToken(await this._getStoredTokenFor(m));const n=t.querySelector("#client_body");this._linkifier.processAll([n],!0),this._linkifier.observe(n),this._logUtils.log("Installed.")}catch(e){this._onError(e)}}_addListeners(e){const t=new Set;e.querySelectorAll(`.${r}:not(.${l})`).forEach(e=>{t.add(e),this._addListenersForLink(e,e=>this._getPopupContentForGithubCommit(e))}),e.querySelectorAll(`.${o}:not(.${l})`).forEach(e=>{t.add(e),this._addListenersForLink(e,e=>this._getPopupContentForGithubIssue(e))}),e.querySelectorAll(`.${i}:not(.${l})`).forEach(e=>{t.add(e),this._addListenersForLink(e,e=>this._getPopupContentForJira(e))}),t.forEach(e=>{e.classList.add(l),this._cleanUpFns.push(()=>e.classList.remove(l))})}_addListenersForLink(e,t){const n=e.style,s=e.dataset;let r=0;const o=async e=>{try{const o=r;if(await new Promise(e=>setTimeout(e,500)),o!==r)return;n.cursor="progress";const i=await t(s);if(o!==r)return;n.cursor="help",this._uiUtils.showPopup(i,e)}catch(e){this._onError(e)}},i=()=>{++r,n.cursor="help",this._uiUtils.scheduleHidePopup(500)};n.cursor="help",e.addEventListener("mouseenter",o),e.addEventListener("mouseleave",i),this._cleanUpFns.push(()=>e.removeEventListener("mouseenter",o),()=>e.removeEventListener("mouseleave",i))}_checkRequiresToken(e){const n=e.requiresToken();if(!n)return;const s=Object.assign(t.createElement("div"),{innerHTML:`\n          <div style="color: orange;">\n            <p><b>Fetching info for this link requires a token.</b></p>\n            <p style="color: gray;">(Reason: ${n})</p>\n          </div>\n          <div><button>Provide token now</button></div>\n        `});return Object.assign(s.querySelector("button"),{onclick:async()=>e.setToken(await this._promptForToken(e.constructor)),onmouseenter:e=>e.target.style.borderColor="orange",onmouseleave:e=>e.target.style.borderColor="white",style:"\n          background-color: cornflowerblue;\n          border: 2px solid white;\n          border-radius: 6px;\n          color: white;\n          padding: 10px 15px;\n        "}),s}async _getPopupContentForGithubCommit(e){const t=this._checkRequiresToken(this._ghUtils);if(t)return t;const n={added:"green",modified:"darkorchid",removed:"red",renamed:"blue"},s=e.nslOwner,r=e.nslRepo,o=e.nslCommit,i=await this._ghUtils.getCommitInfo(s,r,o),a=i.message.split("\n",1).pop(),l=i.message.slice(a.length).trim();return`\n        <p style="display: flex; font-size: 0.9em; justify-content: space-between;">\n          <span>\n            <img src="${i.author.avatar}" width="25" height="25" style="border-radius: 6px;" />\n            <a href="${i.author.url}" target="_blank">@${i.author.username}</a>\n          </span>\n          <small style="color: gray; text-align: right;">\n            Committed on: ${i.committerDate.toLocaleString()}\n          </small>\n        </p>\n        <p style="align-items: flex-start; display: flex; font-size: 1.25em;">\n          <b>${a}</b>\n          <span style="color: gray; margin-left: 5px;">@${i.sha.slice(0,7)}</span>\n        </p>\n        ${l&&`<br /><pre>${l}</pre>`}\n        <hr />\n        <div>\n          <p style="display: flex;">\n            <b style="flex: auto;">Files (${i.files.length}):</b>\n            <small style="color: lightgray;">Click on a file to see diff.</small>\n          </p>\n          <div style="overflow: auto;">\n            <div style="display: flex; flex-direction: column; width: fit-content;">\n              ${i.files.map(e=>{const t=e.patch.replace(/"/g,"&quot;").replace(/\n/g,"\n"),s=e.patch.split("\n").map(e=>`<span style="${e.startsWith("+")?"background-color: rgba(0, 255, 0, 0.11);":e.startsWith("-")?"background-color: rgba(255, 0, 0, 0.11);":e.startsWith("@@")?"color: rgba(0, 0, 0, 0.33);":"color: rgba(0, 0, 0, 0.66);"}">${e}</span>`).join("\n");return`\n          <details>\n            <summary\n                style="align-items: baseline; cursor: pointer; display: flex; margin: 0 15px 10px; outline: none;"\n                title="${t}">\n              <small style="\n                    background-color: ${n[e.status]};\n                    border-radius: 6px;\n                    color: white;\n                    font-size: 0.75em;\n                    line-height: 1em;\n                    margin-right: 5px;\n                    min-width: 55px;\n                    opacity: 0.5;\n                    padding: 2px 4px;\n                    text-align: center;\n                  ">\n                ${e.status}\n              </small>\n              <span style="flex: auto; white-space: nowrap;">\n                ${e.filename}\n              </span>\n              <small style="text-align: right; white-space: nowrap;">\n                <span style="color: ${n.added}; display: inline-block; min-width: 33px;">\n                  +${e.stats.additions}\n                </span>\n                <span style="color: ${n.removed}; display: inline-block; min-width: 33px;">\n                  -${e.stats.deletions}\n                </span>\n              </small>\n            </summary>\n            <pre style="font-size: 0.9em; line-height: calc(0.9em + 5px);">${s}</pre>\n          </details>\n        `}).join("")}\n            </div>\n          </div>\n        </div>\n      `}async _getPopupContentForGithubIssue(e){const t=this._checkRequiresToken(this._ghUtils);if(t)return t;const n=e.nslOwner,s=e.nslRepo,r=e.nslNumber,o=await this._ghUtils.getIssueInfo(n,s,r),i=o.description.replace(/^<!--[^]*?-->\s*/,"");return`\n        <p style="display: flex; font-size: 0.9em; justify-content: space-between;">\n          <span>\n            <img src="${o.author.avatar}" width="25" height="25" style="border-radius: 6px;" />\n            <a href="${o.author.url}" target="_blank">@${o.author.username}</a>\n          </span>\n          <span style="text-align: right;">\n            ${o.labels.sort().map(e=>`\n              <small style="\n                    border: 1px solid;\n                    border-radius: 6px;\n                    line-height: 2.5em;\n                    margin: 0 3px;\n                    padding: 2px 4px;\n                    text-align: center;\n                    white-space: nowrap;\n                  ">${e}</small>\n            `).join("\n")}\n          </span>\n        </p>\n        <p style="align-items: flex-start; display: flex; font-size: 1.25em;">\n          <span style="\n                background-color: ${{closed:"red",draft:"gray",merged:"darkorchid",open:"green"}[o.state]};\n                border-radius: 6px;\n                color: white;\n                font-size: 0.75em;\n                margin-right: 5px;\n                padding: 2px 4px;\n                text-align: center;\n              ">\n            ${o.state.toUpperCase()}\n          </span>\n          <b style="flex: auto;">${o.title}</b>\n          <span style="color: gray; margin-left: 5px; white-space: nowrap;">\n            <span style="color: lightgray;">${o.isPr?"PR":"Issue"}:</span>\n            #${o.number}\n          </span>\n        </p>\n        <br />\n        <pre>${i||'<i style="color: gray;">No description.</i>'}</pre>\n      `}async _getPopupContentForJira(e){const t=this._checkRequiresToken(this._jiraUtils);if(t)return t;const n=e.nslNumber,s=await this._jiraUtils.getIssueInfo(n);return`\n        <b>Jira issue ${n}:</b>\n        <pre>${JSON.stringify(s,null,2)}</pre>\n      `}async _getStoredTokenFor(e){const t=this._KEYS.get(e);try{const n=["inMemory","session","local"].reduce((e,n)=>e||this._storageUtils[n].get(t),null);if(!n)return;const s=await this._whileNotDestroyed(this._secretUtils.decrypt(n));return e.validateToken(s),s}catch(n){if(n===h)throw n;this._storageUtils.inMemory.delete(t),this._storageUtils.session.delete(t),this._storageUtils.local.delete(t);const s=`Found a corrupted or invalid stored ${e.TOKEN_NAME} and removed it.`;this._logUtils.error(n),this._logUtils.warn(s),this._uiUtils.showSnackbar(`<div style="color: orange;">\n            <b>${s}</b><br />\n            <small>(See the console for more details.)</small>\n          </div>`,3e3)}}async _promptForToken(t,s=2){const r=t.TOKEN_NAME,o=t.TOKEN_DESCRIPTION_HTML,i=`$$${n}-promptForToken-ctx-${Date.now()}-${Math.random()}`,a=e[i]={token:"",storage:"local"},l=`\n        <h2>No ${r} detected</h2>\n        <hr />\n        <p>It seems that you have not provided a ${r}.</p>\n        <p>${o}</p>\n        <hr />\n        <p>Would you like to provide one now?</p>\n        <p>\n          <form>\n            <label style="cursor: default; display: block; margin-bottom: 10px;">\n              ${r}:\n              <div style="align-items: center; display: flex; position: relative;">\n                <input\n                    type="password"\n                    placeholder="(required)"\n                    value="${a.token}"\n                    style="margin: 0;"\n                    oninput="javascript:window['${i}'].token = event.target.value;"\n                    />\n                <span\n                    style="cursor: pointer; font-size: 2em; position: absolute; right: 10px;"\n                    onmousedown="javascript:event.target.previousElementSibling.type = 'text';"\n                    onmouseup="javascript:event.target.previousElementSibling.type = 'password';">\n                  👁️\n                </span>\n              </div>\n            </label>\n            <label style="cursor: default; display: block; margin-bottom: 10px;">\n              Store:\n              <div style="align-items: center; display: flex; position: relative;">\n                <select\n                    value="${a.store}"\n                    style="cursor: pointer;"\n                    onchange="javascript:window['${i}'].storage = event.target.value;">\n                  <option value="local">Permanently (for this browser)</option>\n                  <option value="session">Only for current session</option>\n                </select>\n                <span style="\n                      font-size: 2em;\n                      pointer-events: none;\n                      position: absolute;\n                      right: 24px;\n                      transform: rotateZ(90deg);\n                    ">\n                  &#x276f;\n                </span>\n              </div>\n            </label>\n          </form>\n        </p>\n      `;try{if(!await this._uiUtils.showDialog(l,"Store token","Not now").finally(()=>delete e[i]))return;t.validateToken(a.token);const n=this._KEYS.get(t),o=await this._whileNotDestroyed(this._secretUtils.encrypt(a.token));return this._storageUtils[a.storage].set(n,o),this._uiUtils.showSnackbar(`<b style="color: green;">Successfully stored ${r}.</b>`,3e3),o}catch(e){if(e===h)throw e;if(s>0)return this._onError(e),this._promptForToken(t,--s);const n=`Unable to acquire a valid ${r}. Giving up for now :(`;this._logUtils.error(e),this._logUtils.warn(n),this._uiUtils.showSnackbar(`<div style="color: orange;">\n            <b>${n}</b><br />\n            <small>(See the console for more details.)</small>\n          </div>`,5e3)}}_onError(e){e!==h&&(this._logUtils.error(e),this._uiUtils.showSnackbar('<pre style="background-color: white; border: none; color: red;">'+`<b>${this._uiUtils.escapeHtml(e.message||e)}</b><br />`+"<small>(See the console for more details.)</small></pre>",1e4))}_whileNotDestroyed(e){return Promise.race([e,this._destroyedDeferred.promise])}}).main()})(window,window.document);